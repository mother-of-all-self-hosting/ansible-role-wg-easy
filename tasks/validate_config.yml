# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: (Deprecation) Catch and report renamed settings
  ansible.builtin.fail:
    msg: >-
      Your configuration contains a variable, which now has a different name.
      Please change your configuration to rename the variable (`{{ item.old }}` -> `{{ item.new }}`).
  when: "item.old in vars"
  with_items:
    - { "old": "wg_easy_systemd_required_systemd_services_list_default", "new": "wg_easy_systemd_required_services_list_default" }
    - { "old": "wg_easy_systemd_required_systemd_services_list_auto", "new": "wg_easy_systemd_required_services_list_auto" }
    - { "old": "wg_easy_systemd_required_systemd_services_list_custom", "new": "wg_easy_systemd_required_services_list_custom" }
    - { "old": "wg_easy_environment_variables_additional_variable_wg_host", "new": "wg_easy_environment_variables_additional_variable_host" }
    - { "old": "wg_easy_environment_variables_additional_variable_wg_port", "new": "wg_easy_environment_variables_additional_variable_init_port" }
    - { "old": "wg_easy_environment_variables_additional_variable_wg_config_port", "new": "<removed; no alternative>" }
    - "old": "wg_easy_environment_variables_additional_variable_wg_default_dns"
      "new": "<removed; configurable via the web UI after setup; see docs/services/wg-easy.md for details>"
    - { "old": "wg_easy_environment_variables_additional_variable_password", "new": "wg_easy_environment_variables_additional_variable_init_password" }
    - "old": "wg_easy_environment_variables_additional_variable_password_hash"
      "new": "<removed; no alternative, but wg_easy_environment_variables_additional_variable_init_password is similar>"

- name: Fail if wg_easy_path_prefix is not '/'
  ansible.builtin.fail:
    msg: >-
      WireGuard Easy v15+ does not support path prefixes other than '/' yet.
      Your configuration has wg_easy_path_prefix set to '{{ wg_easy_path_prefix }}', but this will not work.
      Please set wg_easy_path_prefix to '/' in your configuration.
  when: "wg_easy_path_prefix != '/'"

- name: Fail if required WireGuard Easy settings not defined
  ansible.builtin.fail:
    msg: >
      You need to define a required configuration setting (`{{ item }}`).
  when: "vars[item] == ''"
  with_items:
    - wg_easy_identifier
    - wg_easy_uid
    - wg_easy_gid
    - wg_easy_hostname
    - wg_easy_path_prefix
    - wg_easy_container_network
    - wg_easy_environment_variables_additional_variable_host

- name: Run if Traefik is enabled
  when: wg_easy_container_labels_traefik_enabled | bool
  block:
    - name: Fail if required WireGuard Easy Traefik settings not defined
      ansible.builtin.fail:
        msg: >-
          You need to define a required configuration setting (`{{ item }}`).
      when: "vars[item] == ''"
      with_items:
        - wg_easy_container_labels_traefik_hostname
        - wg_easy_container_labels_traefik_path_prefix

    # We ensure it doesn't end with a slash, because we handle both (slash and no-slash).
    # Knowing that `wg_easy_container_labels_traefik_path_prefix` does not end with a slash
    # ensures we know how to set these routes up without having to do "does it end with a slash" checks elsewhere.
    - name: Fail if wg_easy_container_labels_traefik_path_prefix ends with a slash
      ansible.builtin.fail:
        msg: >-
          wg_easy_container_labels_traefik_path_prefix (`{{ wg_easy_container_labels_traefik_path_prefix }}`) must either be `/` or not end with a slash (e.g. `/wg-easy`).
      when: "wg_easy_container_labels_traefik_path_prefix != '/' and wg_easy_container_labels_traefik_path_prefix[-1] == '/'"
